{"name":"Phalanx","tagline":"Lua-Nginx micro framework","body":"# Phalanx [![Build Status](https://travis-ci.org/ninjapenguin/phalanx.png?branch=master)](https://travis-ci.org/ninjapenguin/phalanx)\r\n\r\nA micro framework for nginx-lua currently primarily aimed at producing lightweight, high throughput api's\r\n\r\n## TL;DR;\r\n\r\n```Lua\r\nlocal app_router = require(\"phalanx.router\"):new()\r\nlocal route = require(\"phalanx.route\")\r\n\r\napp_router:add(\r\n\t'book', route:new('^/book/(%w+)', require(\"myapp.controller.book\"))\r\n)\r\n\r\napp_router:add(\r\n\t'user', route:new('^/user', require(\"myapp.controller.user\"))\r\n)\r\n\r\nngx.say(\r\n\tapp_router\r\n\t:route()\r\n\t:send_headers()\r\n\t:body()\r\n)\r\n```\r\n\r\n## Install\r\n\r\nDownload one liner:\r\n\r\n```bash\r\ngit clone https://github.com/ninjapenguin/phalanx.git && cd phalanx && luarocks make\r\n````\r\n\r\n## Examples\r\n\r\nThe below is an example of a simple phalanx site setup\r\n\r\n### nginx.conf\r\n\r\n```nginx\r\nworker_processes 4;\r\n\r\nevents {\r\n   worker_connections 1024;\r\n}\r\n\r\nhttp {\r\n\r\n    lua_package_path \"/web/root/sites/phalanx/lua/?.lua;;\";\r\n\r\n    include       mime.types;\r\n    sendfile on;\r\n\r\n    server {\r\n      lua_code_cache off;\r\n      listen 80;\r\n      server_name phalanx.dev;\r\n\r\n      root /web/root/sites/phalanx/public;\r\n\r\n      access_log /var/log/nginx/access_phalanx.log;\r\n      error_log /var/log/nginx/error_phalanx.log debug;\r\n\r\n      location / {\r\n        try_files $uri @framework;\r\n      }\r\n\r\n      location @framework {\r\n        content_by_lua_file '/web/root/sites/phalanx/lua/index.lua';\r\n      }\r\n    }\r\n}\r\n```\r\n\r\n### phalanx.lua\r\n\r\n```lua\r\nlocal app_router = require(\"phalanx.router\"):new()\r\nlocal route = require(\"phalanx.route\")\r\n\r\napp_router:add(\r\n    'welcome', route:new('^/', require(\"controller.welcome\"))\r\n)\r\n\r\nngx.say(\r\n    app_router\r\n    :route()\r\n    :send_headers()\r\n    :body()\r\n)\r\n```\r\n\r\n### controller/welcome.lua\r\n\r\n```lua\r\nlocal page = require(\"phalanx.controller\"):extends()\r\nfunction page:get()\r\n    self.response:body(\"Hello World\")\r\nend\r\n\r\nreturn page\r\n```\r\n\r\n### Files\r\n\r\n```\r\n├── lua\r\n│   ├── controller\r\n│   │   └── welcome.lua\r\n│   └── index.lua\r\n└── public\r\n    └── test.html\r\n```\r\n\r\n## Dependencies\r\n\r\nThe below rocks are dependencies (these will be auto installed for you with the above command)\r\n\r\n[30log] (https://github.com/Yonaba/30log)\r\n```bash\r\nluarocks install --server=http://rocks.moonscript.org/manifests/Yonaba 30log\r\n```\r\n\r\n[Penlight] (http://stevedonovan.github.io/Penlight/api/index.html)\r\n```bash\r\nluarocks install --server=http://rocks.moonscript.org moonrocks\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}